import streamlit as st
import pandas as pd
import plotly.express as px
import logging

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ –ë–∞—Ä—Å–µ–ª–æ–Ω—ã 2024/2025", layout="wide")

st.title("üìä –ê–Ω–∞–ª–∏–∑ —Å–µ–∑–æ–Ω–∞ –§–ö –ë–∞—Ä—Å–µ–ª–æ–Ω–∞ 2024/2025")
st.markdown("–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–∞—Ç—á–µ–π: —Ç—Ä–µ–Ω–¥—ã –≥–æ–ª–æ–≤, –¥–æ–º–∞—à–Ω–∏–µ/–≥–æ—Å—Ç–µ–≤—ã–µ –∏–≥—Ä—ã, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.")

@st.cache_data
def load_data():
    try:
        df = pd.read_csv("data/processed/matches.csv")
        logging.info("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        return df
    except FileNotFoundError:
        logging.error("–§–∞–π–ª data/processed/matches.csv –Ω–µ –Ω–∞–π–¥–µ–Ω")
        st.error("–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ scripts/run_all.py")
        return None

df = load_data()
if df is None:
    st.stop()

# –ù–∞–≤–∏–≥–∞—Ü–∏—è
st.sidebar.header("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
page = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", ["–ì–ª–∞–≤–Ω–∞—è", "–î–∞–Ω–Ω—ã–µ", "EDA", "–¢—Ä–µ–Ω–¥—ã", "–í—ã–≤–æ–¥—ã"])

if page == "–ì–ª–∞–≤–Ω–∞—è":
    st.header("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
    st.markdown("""
    –≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–µ–∑–æ–Ω –§–ö –ë–∞—Ä—Å–µ–ª–æ–Ω–∞ 2024/2025. –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: –≤–µ–±-—Å–∫—Ä—ç–ø–∏–Ω–≥ (fbref.com).
    - **–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö**: –ü–∞—Ä—Å–∏–Ω–≥ –º–∞—Ç—á–µ–π –∏ –±–æ–º–±–∞—Ä–¥–∏—Ä–æ–≤.
    - **–û—á–∏—Å—Ç–∫–∞**: –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ DataFrame, —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤.
    - **–ê–Ω–∞–ª–∏–∑**: –¢—Ä–µ–Ω–¥—ã –≥–æ–ª–æ–≤, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ–º–∞/–≤ –≥–æ—Å—Ç—è—Ö, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
    - **–î—ç—à–±–æ—Ä–¥**: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∏.
    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é —Å–ª–µ–≤–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
    """)

elif page == "–î–∞–Ω–Ω—ã–µdff = load_data()
if df is None:
    st.stop()

# –§–∏–ª—å—Ç—Ä—ã
st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã")
matchday_range = st.sidebar.slider("–í—ã–±–µ—Ä–∏—Ç–µ —Ç—É—Ä—ã", int(df['matchday'].min()), int(df['matchday'].max()), (1, int(df['matchday'].max())))
venue_filter = st.sidebar.multiselect("–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è", options=df['venue'].unique(), default=df['venue'].unique())
result_filter = st.sidebar.multiselect("–†–µ–∑—É–ª—å—Ç–∞—Ç", options=df['result'].unique(), default=df['result'].unique())
filtered_df = df[
    (df['matchday'].between(matchday_range[0], matchday_range[1])) &
    (df['venue'].isin(venue_filter)) &
    (df['result'].isin(result_filter))
]

st.header("–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
st.dataframe(filtered_df, use_container_width=True)
st.write(f"–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(filtered_df)}")
st.write(f"–ü—Ä–æ–ø—É—Å–∫–∏: {filtered_df.isnull().sum().sum()}")

elif page == "EDA":
    st.header("–†–∞–∑–≤–µ–¥—ã–≤–∞—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö (EDA)")
    st.subheader("–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö")
    st.write(df.dtypes)
    st.subheader("–û–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    st.write(df.describe(include='all'))
    st.subheader("–ü—Ä–æ–ø—É—Å–∫–∏")
    st.write(df.isnull().sum())
    st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    fig = px.histogram(df, x='result', title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–µ–π')
    st.plotly_chart(fig, use_container_width=True)

elif page == "–¢—Ä–µ–Ω–¥—ã":
    st.header("–¢—Ä–µ–Ω–¥—ã –∏ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏")
    st.subheader("–ì–æ–ª—ã –ø–æ —Ç—É—Ä–∞–º")
    fig = px.line(filtered_df, x='matchday', y='goals_for', title='–ì–æ–ª—ã –ë–∞—Ä—Å–µ–ª–æ–Ω—ã –ø–æ —Ç—É—Ä–∞–º', markers=True)
    st.plotly_chart(fig, use_container_width=True)
    
    st.subheader("–ì–æ–ª—ã: –î–æ–º–∞ vs –í –≥–æ—Å—Ç—è—Ö")
    home_away = filtered_df.groupby('venue')['goals_for'].mean().reset_index()
    fig = px.bar(home_away, x='venue', y='goals_for', title='–°—Ä–µ–¥–Ω–∏–µ –≥–æ–ª—ã –ø–æ –º–µ—Å—Ç—É –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è', color='venue')
    st.plotly_chart(fig, use_container_width=True)
    
    st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    fig = px.histogram(filtered_df, x='result', title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–µ–π', color='result')
    st.plotly_chart(fig, use_container_width=True)

elif page == "–í—ã–≤–æ–¥—ã":
    st.header("–í—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    st.markdown("""
    ### –ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã
    - **–¢—Ä–µ–Ω–¥—ã –≥–æ–ª–æ–≤**: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–∏—Ç—ã—Ö –≥–æ–ª–æ–≤ –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è, —Å –ø–∏–∫–∞–º–∏ –≤ –¥–æ–º–∞—à–Ω–∏—Ö –º–∞—Ç—á–∞—Ö.
    - **–î–æ–º/–ì–æ—Å—Ç—å**: –ë–∞—Ä—Å–µ–ª–æ–Ω–∞ –∑–∞–±–∏–≤–∞–µ—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º –±–æ–ª—å—à–µ –¥–æ–º–∞ (–Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö).
    - **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã**: –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥, –Ω–∏—á—å–∏—Ö –∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–π.
    - **–ë–æ–º–±–∞—Ä–¥–∏—Ä—ã**: –î–∞–Ω–Ω—ã–µ –æ –±–æ–º–±–∞—Ä–¥–∏—Ä–∞—Ö —Ç—Ä–µ–±—É—é—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏.

    ### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    - –£–ª—É—á—à–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –≤–ª–∞–¥–µ–Ω–∏–∏ –º—è—á–æ–º –∏ —É–¥–∞—Ä–∞—Ö.
    - –î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—ã –∫–æ–º–∞–Ω–¥—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∞—Ç—á–µ–π).
    - –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç—Ä–∞–≤–º–∞—Ö –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.

    ### –î–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏
    - –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é CI/CD –Ω–∞ GitHub.
    - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º scikit-learn.
    """)
